[alias]
  hist = !git --no-pager log $(git branch --show-current) --pretty=format:'%C(green)%h%C(reset) | %C(green)[%an]%C(reset) %C(reset)%s%C(reset) %C(bold blue)%d%C(reset)' --graph --date=short -n 7 --decorate-refs-exclude='refs/remotes/' --decorate-refs-exclude='refs/tags/' --not dev
  histall = !git --no-pager log --pretty=format:'%C(green)%h%C(reset) | %C(green)[%an]%C(reset) %C(reset)%s%C(reset) %C(bold blue)%d%C(reset)' --graph --date=short -n 7 --decorate-refs-exclude='refs/remotes/' --decorate-refs-exclude='refs/tags/'
  files = !git diff-tree --no-commit-id --name-only -r HEAD $(git merge-base HEAD dev)
  fb = !git diff-tree --no-commit-id --name-only -r HEAD
  bl = !git --no-pager branch -l
  blr = !git branch -l -r 'origin/lvonessen/*'
  blr2 = !git --no-pager branch -l -r 'origin/lvonessen/*'
  # rebase from divergence with $1 onto dev
  rfrom = "!f() { git rebase --onto dev $(git merge-base \"$1\" HEAD); }; f"
  # rebase from divergence with $1 onto $1
  rbb = "!f() { git rebase --onto \"$1\" $(git merge-base \"$1\" HEAD); }; f"
  # rebase from divergence with $1 onto $2
  rfronto = "!f() { git rebase --onto \"$2\" $(git merge-base \"$1\" HEAD); }; f"
  pushf = !git push origin --force-with-lease $(git branch --show-current)
[oh-my-zsh]
  hide-info = 1
[rebase]
  updateRefs = true
[merge]
  # This should make pull less noisy, I think
  stat = false
[pull]
  # This will error if fast-forwarding isn't possible
  # I think you can override with "git pull --rebase" (rebase) or "git pull --no-ff" (merge)
  ff = only
